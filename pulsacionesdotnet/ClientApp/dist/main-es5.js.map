{"version":3,"sources":["webpack:///node_modules/@angular/localize/fesm2015/init.js","webpack:///src/$_lazy_route_resource lazy namespace object","webpack:///src/app/@base/alert-modal/alert-modal.component.ts","webpack:///src/app/@base/alert-modal/alert-modal.component.html","webpack:///src/app/@base/handle-http-error.service.ts","webpack:///src/app/app-routing.module.ts","webpack:///src/app/app.component.ts","webpack:///src/app/app.component.html","webpack:///src/app/app.module.ts","webpack:///src/app/counter/counter.component.ts","webpack:///src/app/counter/counter.component.html","webpack:///src/app/fetch-data/fetch-data.component.ts","webpack:///src/app/fetch-data/fetch-data.component.html","webpack:///src/app/home/home.component.ts","webpack:///src/app/home/home.component.html","webpack:///src/app/nav-menu/nav-menu.component.ts","webpack:///src/app/nav-menu/nav-menu.component.html","webpack:///src/app/pipe/filtro-persona.pipe.ts","webpack:///src/app/pulsacion/models/persona.ts","webpack:///src/app/pulsacion/persona-consulta/persona-consulta.component.ts","webpack:///src/app/pulsacion/persona-consulta/persona-consulta.component.html","webpack:///src/app/pulsacion/persona-registro/persona-registro.component.ts","webpack:///src/app/pulsacion/persona-registro/persona-registro.component.html","webpack:///src/app/services/persona.service.ts","webpack:///src/environments/environment.ts","webpack:///src/main.ts"],"names":["__globalThis","globalThis","__window","window","__self","self","WorkerGlobalScope","__global","global","_global","$localize","messageParts","expressions","translate","translation","message","stripBlock","raw","i","length","BLOCK_MARKER","messagePart","rawMessagePart","charAt","substring","findEndOfBlock","cooked","cookedIndex","rawIndex","Error","webpackEmptyAsyncContext","req","Promise","resolve","then","e","code","keys","module","exports","id","AlertModalComponent","activeModal","selector","templateUrl","styleUrls","HandleHttpErrorService","modalService","operation","result","error","status","mostrarError500","mostrarError400","messageBox","open","componentInstance","title","console","contadorValidaciones","mensajeValidaciones","prop","errors","forEach","element","modalRef","providedIn","routes","path","component","AppRoutingModule","forRoot","declarations","imports","AppComponent","AppModule","withServerTransition","appId","pathMatch","entryComponents","providers","bootstrap","CounterComponent","currentCount","incrementCounter","FetchDataComponent","http","baseUrl","get","subscribe","forecasts","HomeComponent","NavMenuComponent","isExpanded","toggle","FiltroPersonaPipe","persona","searchText","filter","p","nombre","toLowerCase","indexOf","name","Persona","PersonaConsultaComponent","personaService","personas","PersonaRegistroComponent","formBuilder","buildForm","identificacion","edad","pulsacion","sexo","formGroup","group","required","validaSexo","min","control","value","toLocaleUpperCase","validSexo","messageSexo","invalid","add","post","alert","controlName","touched","JSON","stringify","controls","onSubmit","PersonaService","handleErrorService","pipe","_","log","handleError","environment","production","getBaseUrl","document","getElementsByTagName","href","provide","useFactory","deps","bootstrapModule","err"],"mappings":"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","file":"main-es5.js","sourcesContent":["/**\n * @license Angular v9.1.3\n * (c) 2010-2020 Google LLC. https://angular.io/\n * License: MIT\n */\n\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nconst __globalThis = typeof globalThis !== 'undefined' && globalThis;\nconst __window = typeof window !== 'undefined' && window;\nconst __self = typeof self !== 'undefined' && typeof WorkerGlobalScope !== 'undefined' &&\n    self instanceof WorkerGlobalScope && self;\nconst __global = typeof global !== 'undefined' && global;\n// Always use __globalThis if available; this is the spec-defined global variable across all\n// environments.\n// Then fallback to __global first; in Node tests both __global and __window may be defined.\nconst _global = __globalThis || __global || __window || __self;\n\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n/**\n * Tag a template literal string for localization.\n *\n * For example:\n *\n * ```ts\n * $localize `some string to localize`\n * ```\n *\n * **Providing meaning, description and id**\n *\n * You can optionally specify one or more of `meaning`, `description` and `id` for a localized\n * string by pre-pending it with a colon delimited block of the form:\n *\n * ```ts\n * $localize`:meaning|description@@id:source message text`;\n *\n * $localize`:meaning|:source message text`;\n * $localize`:description:source message text`;\n * $localize`:@@id:source message text`;\n * ```\n *\n * This format is the same as that used for `i18n` markers in Angular templates. See the\n * [Angular 18n guide](guide/i18n#template-translations).\n *\n * **Naming placeholders**\n *\n * If the template literal string contains expressions, then the expressions will be automatically\n * associated with placeholder names for you.\n *\n * For example:\n *\n * ```ts\n * $localize `Hi ${name}! There are ${items.length} items.`;\n * ```\n *\n * will generate a message-source of `Hi {$PH}! There are {$PH_1} items`.\n *\n * The recommended practice is to name the placeholder associated with each expression though.\n *\n * Do this by providing the placeholder name wrapped in `:` characters directly after the\n * expression. These placeholder names are stripped out of the rendered localized string.\n *\n * For example, to name the `items.length` expression placeholder `itemCount` you write:\n *\n * ```ts\n * $localize `There are ${items.length}:itemCount: items`;\n * ```\n *\n * **Escaping colon markers**\n *\n * If you need to use a `:` character directly at the start of a tagged string that has no\n * metadata block, or directly after a substitution expression that has no name you must escape\n * the `:` by preceding it with a backslash:\n *\n * For example:\n *\n * ```ts\n * // message has a metadata block so no need to escape colon\n * $localize `:some description::this message starts with a colon (:)`;\n * // no metadata block so the colon must be escaped\n * $localize `\\:this message starts with a colon (:)`;\n * ```\n *\n * ```ts\n * // named substitution so no need to escape colon\n * $localize `${label}:label:: ${}`\n * // anonymous substitution so colon must be escaped\n * $localize `${label}\\: ${}`\n * ```\n *\n * **Processing localized strings:**\n *\n * There are three scenarios:\n *\n * * **compile-time inlining**: the `$localize` tag is transformed at compile time by a\n * transpiler, removing the tag and replacing the template literal string with a translated\n * literal string from a collection of translations provided to the transpilation tool.\n *\n * * **run-time evaluation**: the `$localize` tag is a run-time function that replaces and\n * reorders the parts (static strings and expressions) of the template literal string with strings\n * from a collection of translations loaded at run-time.\n *\n * * **pass-through evaluation**: the `$localize` tag is a run-time function that simply evaluates\n * the original template literal string without applying any translations to the parts. This\n * version is used during development or where there is no need to translate the localized\n * template literals.\n * @param messageParts a collection of the static parts of the template string.\n * @param expressions a collection of the values of each placeholder in the template string.\n * @returns the translated string, with the `messageParts` and `expressions` interleaved together.\n */\nconst $localize = function (messageParts, ...expressions) {\n    if ($localize.translate) {\n        // Don't use array expansion here to avoid the compiler adding `__read()` helper unnecessarily.\n        const translation = $localize.translate(messageParts, expressions);\n        messageParts = translation[0];\n        expressions = translation[1];\n    }\n    let message = stripBlock(messageParts[0], messageParts.raw[0]);\n    for (let i = 1; i < messageParts.length; i++) {\n        message += expressions[i - 1] + stripBlock(messageParts[i], messageParts.raw[i]);\n    }\n    return message;\n};\nconst BLOCK_MARKER = ':';\n/**\n * Strip a delimited \"block\" from the start of the `messagePart`, if it is found.\n *\n * If a marker character (:) actually appears in the content at the start of a tagged string or\n * after a substitution expression, where a block has not been provided the character must be\n * escaped with a backslash, `\\:`. This function checks for this by looking at the `raw`\n * messagePart, which should still contain the backslash.\n *\n * @param messagePart The cooked message part to process.\n * @param rawMessagePart The raw message part to check.\n * @returns the message part with the placeholder name stripped, if found.\n * @throws an error if the block is unterminated\n */\nfunction stripBlock(messagePart, rawMessagePart) {\n    return rawMessagePart.charAt(0) === BLOCK_MARKER ?\n        messagePart.substring(findEndOfBlock(messagePart, rawMessagePart) + 1) :\n        messagePart;\n}\n/**\n * Find the end of a \"marked block\" indicated by the first non-escaped colon.\n *\n * @param cooked The cooked string (where escaped chars have been processed)\n * @param raw The raw string (where escape sequences are still in place)\n *\n * @returns the index of the end of block marker\n * @throws an error if the block is unterminated\n */\nfunction findEndOfBlock(cooked, raw) {\n    /***********************************************************************************************\n     * This function is repeated in `src/utils/messages.ts` and the two should be kept in sync.\n     * The reason is that this file is marked as having side-effects, and if we import `messages.ts`\n     * into it, the whole of `src/utils` will be included in this bundle and none of the functions\n     * will be tree shaken.\n     ***********************************************************************************************/\n    for (let cookedIndex = 1, rawIndex = 1; cookedIndex < cooked.length; cookedIndex++, rawIndex++) {\n        if (raw[rawIndex] === '\\\\') {\n            rawIndex++;\n        }\n        else if (cooked[cookedIndex] === BLOCK_MARKER) {\n            return cookedIndex;\n        }\n    }\n    throw new Error(`Unterminated $localize metadata block in \"${raw}\".`);\n}\n\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n// Attach $localize to the global context, as a side-effect of this module.\n_global.$localize = $localize;\n//# sourceMappingURL=init.js.map\n","function webpackEmptyAsyncContext(req) {\n\t// Here Promise.resolve().then() is used instead of new Promise() to prevent\n\t// uncaught exception popping up in devtools\n\treturn Promise.resolve().then(function() {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t});\n}\nwebpackEmptyAsyncContext.keys = function() { return []; };\nwebpackEmptyAsyncContext.resolve = webpackEmptyAsyncContext;\nmodule.exports = webpackEmptyAsyncContext;\nwebpackEmptyAsyncContext.id = \"./src/$$_lazy_route_resource lazy recursive\";","import { Component, OnInit, Input } from '@angular/core';\nimport { NgbActiveModal } from '@ng-bootstrap/ng-bootstrap';\n\n@Component({\n  selector: 'app-alert-modal',\n  templateUrl: './alert-modal.component.html',\n  styleUrls: ['./alert-modal.component.css']\n})\nexport class AlertModalComponent implements OnInit {\n\n  constructor(public activeModal: NgbActiveModal) { }\n  @Input() title;\n  @Input() message;\n\n  ngOnInit(): void {\n  }\n\n}\n","<div class=\"modal-header\">\n        <h4 class=\"modal-title\">{{title}}</h4>\n        <button type=\"button\" class=\"close\" aria-label=\"Close\" (click)=\"activeModal.dismiss('Cross click')\">\n              <span aria-hidden=\"true\">&times;</span>\n            </button>\n      </div>\n  <div class=\"modal-body\">\n        <span [innerHTML]=\"message\"></span>\n      </div>\n  <div class=\"modal-footer\">\n        <button type=\"button\" class=\"btn btn-outline-dark\" (click)=\"activeModal.close('Close click')\">Cerrar</button>\n      </div>","import { Injectable } from '@angular/core';\nimport { Observable, of } from 'rxjs';\nimport { NgbModal } from '@ng-bootstrap/ng-bootstrap';\nimport { AlertModalComponent } from './alert-modal/alert-modal.component';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class HandleHttpErrorService {\n\n  constructor(private modalService: NgbModal) { }\n\n  public handleError<T>(operation = 'operation', result?: T) {\n    return (error: any): Observable<T> => {\n      if (error.status == '500') {\n        this.mostrarError500(error);\n      }\n\n      if (error.status == '400') {\n        this.mostrarError400(error);\n      }\n      return of(result as T);\n    };\n  }\n  public log(message: string) {\n    const messageBox = this.modalService.open(AlertModalComponent)\n    messageBox.componentInstance.title = 'Resultado Operación';\n    messageBox.componentInstance.message = message;\n  }\n  private mostrarError500(error: any) {\n    console.error(error);\n  }\n  private mostrarError400(error: any): void {\n    console.error(error);\n    let contadorValidaciones: number = 0;\n    let mensajeValidaciones: string =\n      `Señor(a) usuario(a), se han presentado algunos errores de validación, por favor revíselos y vuelva a realizar la operación.<br/><br/>`;\n\n    for (const prop in error.error.errors) {\n      contadorValidaciones++;\n      mensajeValidaciones += `<strong>${contadorValidaciones}. ${prop}:</strong>`;\n\n      error.error.errors[prop].forEach(element => {\n        mensajeValidaciones += `<br/> - ${element}`;\n      });\n\n      mensajeValidaciones += `<br/>`;\n    }\n\n    const modalRef = this.modalService.open(AlertModalComponent);\n    modalRef.componentInstance.title = 'Mensaje de Error';\n    modalRef.componentInstance.message = mensajeValidaciones;\n\n  }\n}\n","import { PersonaRegistroComponent } from './pulsacion/persona-registro/persona-registro.component';\nimport { PersonaConsultaComponent } from './pulsacion/persona-consulta/persona-consulta.component';\nimport { NgModule, Component } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { Routes, RouterModule } from '@angular/router';\n\nconst routes: Routes = [\n  {\n  path: 'personaConsulta',\n  component: PersonaConsultaComponent\n  },\n  \n{\n    path: 'personaRegistro',\n    component: PersonaRegistroComponent\n  }\n];\n\n@NgModule({\n  declarations: [],\n  imports: [\n    CommonModule,\n    RouterModule.forRoot(routes)\n  ],\n  exports:[RouterModule]\n})\nexport class AppRoutingModule { }\n","import { Component } from '@angular/core';\r\n\r\n@Component({\r\n  selector: 'app-root',\r\n  templateUrl: './app.component.html'\r\n})\r\nexport class AppComponent {\r\n  title = 'app';\r\n}\r\n","<body>\r\n  <app-nav-menu></app-nav-menu>\r\n  <div class=\"container\">\r\n    <router-outlet></router-outlet>\r\n  </div>\r\n</body>\r\n","import { BrowserModule } from '@angular/platform-browser';\r\nimport { NgModule } from '@angular/core';\r\nimport { FormsModule, ReactiveFormsModule } from '@angular/forms';\r\nimport { HttpClientModule, HTTP_INTERCEPTORS } from '@angular/common/http';\r\nimport { RouterModule } from '@angular/router';\r\n\r\nimport { AppComponent } from './app.component';\r\nimport { NavMenuComponent } from './nav-menu/nav-menu.component';\r\nimport { HomeComponent } from './home/home.component';\r\nimport { CounterComponent } from './counter/counter.component';\r\nimport { FetchDataComponent } from './fetch-data/fetch-data.component';\r\nimport { PersonaConsultaComponent } from './pulsacion/persona-consulta/persona-consulta.component';\r\nimport { PersonaRegistroComponent } from './pulsacion/persona-registro/persona-registro.component';\r\nimport { AppRoutingModule } from './app-routing.module';\r\nimport { PersonaService } from './services/persona.service';\r\nimport { FiltroPersonaPipe } from './pipe/filtro-persona.pipe';\r\nimport { NgbModule } from '@ng-bootstrap/ng-bootstrap';\r\nimport { AlertModalComponent } from './@base/alert-modal/alert-modal.component';\r\n@NgModule({\r\n  declarations: [\r\n    AppComponent,\r\n    NavMenuComponent,\r\n    HomeComponent,\r\n    CounterComponent,\r\n    FetchDataComponent,\r\n    PersonaConsultaComponent,\r\n    PersonaRegistroComponent,\r\n    FiltroPersonaPipe,\r\n    AlertModalComponent\r\n  ],\r\n  imports: [\r\n    ReactiveFormsModule,\r\n    BrowserModule.withServerTransition({ appId: 'ng-cli-universal' }),\r\n    HttpClientModule,\r\n    FormsModule,\r\n    RouterModule.forRoot([\r\n      { path: '', component: HomeComponent, pathMatch: 'full' },\r\n      { path: 'counter', component: CounterComponent },\r\n      { path: 'fetch-data', component: FetchDataComponent },\r\n    ]),\r\n    AppRoutingModule,\r\n    NgbModule\r\n  ],\r\n  entryComponents: [AlertModalComponent],\r\n  providers: [PersonaService],\r\n  bootstrap: [AppComponent]\r\n})\r\nexport class AppModule { }\r\n","import { Component } from '@angular/core';\r\n\r\n@Component({\r\n  selector: 'app-counter-component',\r\n  templateUrl: './counter.component.html'\r\n})\r\nexport class CounterComponent {\r\n  public currentCount = 0;\r\n\r\n  public incrementCounter() {\r\n    this.currentCount++;\r\n  }\r\n}\r\n","<h1>Counter</h1>\r\n\r\n<p>This is a simple example of an Angular component.</p>\r\n\r\n<p aria-live=\"polite\">Current count: <strong>{{ currentCount }}</strong></p>\r\n\r\n<button class=\"btn btn-primary\" (click)=\"incrementCounter()\">Increment</button>\r\n","import { Component, Inject } from '@angular/core';\r\nimport { HttpClient } from '@angular/common/http';\r\n\r\n@Component({\r\n  selector: 'app-fetch-data',\r\n  templateUrl: './fetch-data.component.html'\r\n})\r\nexport class FetchDataComponent {\r\n  public forecasts: WeatherForecast[];\r\n\r\n  constructor(http: HttpClient, @Inject('BASE_URL') baseUrl: string) {\r\n    http.get<WeatherForecast[]>(baseUrl + 'weatherforecast').subscribe(result => {\r\n      this.forecasts = result;\r\n    }, error => console.error(error));\r\n  }\r\n}\r\n\r\ninterface WeatherForecast {\r\n  date: string;\r\n  temperatureC: number;\r\n  temperatureF: number;\r\n  summary: string;\r\n}\r\n","<h1 id=\"tableLabel\">Weather forecast</h1>\r\n\r\n<p>This component demonstrates fetching data from the server.</p>\r\n\r\n<p *ngIf=\"!forecasts\"><em>Loading...</em></p>\r\n\r\n<table class='table table-striped' aria-labelledby=\"tableLabel\" *ngIf=\"forecasts\">\r\n  <thead>\r\n    <tr>\r\n      <th>Date</th>\r\n      <th>Temp. (C)</th>\r\n      <th>Temp. (F)</th>\r\n      <th>Summary</th>\r\n    </tr>\r\n  </thead>\r\n  <tbody>\r\n    <tr *ngFor=\"let forecast of forecasts\">\r\n      <td>{{ forecast.date }}</td>\r\n      <td>{{ forecast.temperatureC }}</td>\r\n      <td>{{ forecast.temperatureF }}</td>\r\n      <td>{{ forecast.summary }}</td>\r\n    </tr>\r\n  </tbody>\r\n</table>\r\n","import { Component } from '@angular/core';\r\n\r\n@Component({\r\n  selector: 'app-home',\r\n  templateUrl: './home.component.html',\r\n})\r\nexport class HomeComponent {\r\n}\r\n","<h1>Hello, world!</h1>\r\n<p>Welcome to your new single-page application, built with:</p>\r\n<ul>\r\n  <li><a href='https://get.asp.net/'>ASP.NET Core</a> and <a href='https://msdn.microsoft.com/en-us/library/67ef8sbd.aspx'>C#</a> for cross-platform server-side code</li>\r\n  <li><a href='https://angular.io/'>Angular</a> and <a href='http://www.typescriptlang.org/'>TypeScript</a> for client-side code</li>\r\n  <li><a href='http://getbootstrap.com/'>Bootstrap</a> for layout and styling</li>\r\n</ul>\r\n<p>To help you get started, we've also set up:</p>\r\n<ul>\r\n  <li><strong>Client-side navigation</strong>. For example, click <em>Counter</em> then <em>Back</em> to return here.</li>\r\n  <li><strong>Angular CLI integration</strong>. In development mode, there's no need to run <code>ng serve</code>. It runs in the background automatically, so your client-side resources are dynamically built on demand and the page refreshes when you modify any file.</li>\r\n  <li><strong>Efficient production builds</strong>. In production mode, development-time features are disabled, and your <code>dotnet publish</code> configuration automatically invokes <code>ng build</code> to produce minified, ahead-of-time compiled JavaScript files.</li>\r\n</ul>\r\n<p>The <code>ClientApp</code> subdirectory is a standard Angular CLI application. If you open a command prompt in that directory, you can run any <code>ng</code> command (e.g., <code>ng test</code>), or use <code>npm</code> to install extra packages into it.</p>\r\n","import { Component } from '@angular/core';\r\n\r\n@Component({\r\n  selector: 'app-nav-menu',\r\n  templateUrl: './nav-menu.component.html',\r\n  styleUrls: ['./nav-menu.component.css']\r\n})\r\nexport class NavMenuComponent {\r\n  isExpanded = false;\r\n\r\n  collapse() {\r\n    this.isExpanded = false;\r\n  }\r\n\r\n  toggle() {\r\n    this.isExpanded = !this.isExpanded;\r\n  }\r\n}\r\n","<header>\r\n  <nav\r\n    class=\"navbar navbar-expand-sm navbar-toggleable-sm navbar-light bg-white border-bottom box-shadow mb-3\"\r\n  >\r\n    <div class=\"container\">\r\n      <a class=\"navbar-brand\" [routerLink]=\"['/']\">pulsacionesdotnet</a>\r\n      <button\r\n        class=\"navbar-toggler\"\r\n        type=\"button\"\r\n        data-toggle=\"collapse\"\r\n        data-target=\".navbar-collapse\"\r\n        aria-label=\"Toggle navigation\"\r\n        [attr.aria-expanded]=\"isExpanded\"\r\n        (click)=\"toggle()\"\r\n      >\r\n        <span class=\"navbar-toggler-icon\"></span>\r\n      </button>\r\n      <div\r\n        class=\"navbar-collapse collapse d-sm-inline-flex flex-sm-row-reverse\"\r\n        [ngClass]=\"{ show: isExpanded }\"\r\n      >\r\n        <ul class=\"navbar-nav flex-grow\">\r\n          <li\r\n            class=\"nav-item\"\r\n            [routerLinkActive]=\"['link-active']\"\r\n            [routerLinkActiveOptions]=\"{ exact: true }\"\r\n          >\r\n            <a class=\"nav-link text-dark\" [routerLink]=\"['/home']\">Home</a>\r\n          </li>\r\n          <li class=\"nav-item\" [routerLinkActive]=\"['link-active']\">\r\n            <a class=\"nav-link text-dark\" [routerLink]=\"['/counter']\"\r\n              >Counter</a\r\n            >\r\n          </li>\r\n          <li class=\"nav-item\" [routerLinkActive]=\"['link-active']\">\r\n            <a class=\"nav-link text-dark\" [routerLink]=\"['/fetch-data']\"\r\n              >Fetch data</a\r\n            >\r\n\r\n            \r\n          </li>\r\n          <li class=\"nav-item\" [routerLinkActive]=\"['link-active']\">\r\n            <a class=\"nav-link text-dark\" [routerLink]=\"['/personaRegistro']\"\r\n              >Registro</a\r\n            >\r\n          </li>\r\n          <li class=\"nav-item\" [routerLinkActive]=\"['link-active']\">\r\n            <a class=\"nav-link text-dark\" [routerLink]=\"['/personaConsulta']\"\r\n              >Consulta</a\r\n            >\r\n          </li>\r\n        </ul>\r\n      </div>\r\n    </div>\r\n  </nav>\r\n</header>\r\n","import { Pipe, PipeTransform } from '@angular/core';\nimport { Persona } from '../pulsacion/models/persona';\n\n@Pipe({\n  name: 'filtroPersona'\n})\nexport class FiltroPersonaPipe implements PipeTransform {\n\n  transform(persona: Persona[], searchText: string): any {\n    if(searchText == null) {return persona;}\n    return persona.filter(p => p.nombre.toLowerCase().indexOf(searchText.toLowerCase()) !== -1);\n  }\n\n}\n","export class Persona {\n    identificacion: string;\n    nombre: string;\n    sexo: string;\n    edad: number;\n    pulsacion: number;\n}\n","import { Component, OnInit } from '@angular/core';\nimport { Persona } from '../models/persona';\nimport { PersonaService } from 'src/app/services/persona.service'\n\n@Component({\n  selector: 'app-persona-consulta',\n  templateUrl: './persona-consulta.component.html',\n  styleUrls: ['./persona-consulta.component.css']\n})\nexport class PersonaConsultaComponent implements OnInit {\n  searchText:string;\n  personas: Persona[];\n  constructor(private personaService: PersonaService) { }\n\n  ngOnInit(){\n    this.personaService.get().subscribe(result => {\n      this.personas = result;\n    });\n  }\n}\n","<div class=\"row\">\n    <div class=\"col-6\">\n      <input [(ngModel)]=\"searchText\" type=\"text\" class=\"form-control\" placeholder=\"Type to filter\">\n    </div>\n  </div>\n  <hr>\n\n<table class=\"table table-striped\" *ngIf='personas && personas.length'>\n    <thead>\n        <tr>\n            <th scope=\"col\">#</th>\n            <th scope=\"col\">Identificación</th>\n            <th scope=\"col\">Nombre </th>\n            <th scope=\"col\">Sexo</th>\n            <th scope=\"col\">Edad</th>\n            <th scope=\"col\">Pulsacion</th>\n        </tr>\n    </thead>\n    <tbody>\n        <tr *ngFor=\"let persona of personas|filtroPersona:searchText;index as i \">\n        <th scope=\"row\">{{ i + 1 }}</th>\n            <td>{{ persona.identificacion }} </td>\n            <td>{{ persona.nombre }}</td>\n            <td>{{ persona.sexo }}</td>\n            <td>{{ persona.edad }}</td>\n            <td>{{ persona.pulsacion }}</td>\n        </tr>\n    </tbody>\n</table>\n","import { PersonaService } from './../../services/persona.service';\nimport { Persona } from './../models/persona';\nimport { Component, OnInit } from '@angular/core';\nimport { FormGroup, FormBuilder, Validators, AbstractControl, ValidationErrors } from '@angular/forms';\n\n@Component({\n  selector: 'app-persona-registro',\n  templateUrl: './persona-registro.component.html',\n  styleUrls: ['./persona-registro.component.css']\n})\nexport class PersonaRegistroComponent implements OnInit {\n\n  formGroup: FormGroup;\n  persona: Persona;\n  constructor(private personaService: PersonaService, private formBuilder: FormBuilder) { }\n\n  ngOnInit(): void {\n    this.buildForm();\n  }\n\n  private buildForm() {\n    this.persona = new Persona();\n    this.persona.identificacion = '';\n    this.persona.nombre = '';\n    this.persona.edad = 0;\n    this.persona.pulsacion = 0;\n    this.persona.sexo = '';\n\n    this.formGroup = this.formBuilder.group({\n      identificacion: [this.persona.identificacion, Validators.required],\n      nombre: [this.persona.nombre, Validators.required],\n      sexo: [this.persona.sexo, [Validators.required, this.validaSexo]],\n      edad: [this.persona.edad, [Validators.required, Validators.min(1)]]\n    });\n  }\n\n  private validaSexo(control: AbstractControl) {\n    const sexo = control.value;\n    if (sexo.toLocaleUpperCase() !== 'M' && sexo.toLocaleUpperCase() !== 'F') {\n      return { validSexo: true, messageSexo: 'Sexo No Valido' };\n    }\n    return null;\n  }\n\n  onSubmit() {\n    if (this.formGroup.invalid) {\n      return;\n    }\n    this.add();\n  }\n\n  add() {\n    this.persona = this.formGroup.value;\n    this.personaService.post(this.persona).subscribe(p => {\n      if (p != null) {\n        alert('Persona creada!');\n        this.persona = p;\n      }\n    });\n  }\n\n  public getError(controlName: string): string {\n    let error = '';\n    const control = this.formGroup.get(controlName);\n    if (control.touched && control.errors != null) {\n      error = JSON.stringify(control.errors);\n    }\n    return error;\n  }\n\n  public getErrorV(controlName: string): ValidationErrors {\n    return this.formGroup.get(controlName).errors;\n  }\n  get f() { return this.formGroup.controls; }\n\n  get control() { return this.formGroup.controls; }\n\n}\n","<div class=\"container\">\n    <div class=\"row\">\n        <div class=\"col-md-6 offset-md-3\">\n    \n            <h2>Registro de personas</h2>\n            <form [formGroup]=\"formGroup\">\n\n                <div class=\"form-group\">\n                    <label for=\"identificacion\">Identificacion</label>\n                    <input type=\"text\" name=\"identificacion\" formControlName=\"identificacion\" class=\"form-control\" \n                    [ngClass]=\"{'is-invalid': control.identificacion.errors && formGroup.get('identificacion').touched}\"/>\n                    <div *ngIf=\"control.identificacion.errors && formGroup.get('identificacion').touched\" class=\"invalid-feedback\">\n                    <div *ngIf=\"control.identificacion.errors.required\">Se requiere la identificacion</div>\n                    </div>\n                </div>\n\n                <div class=\"form-group\">\n                    <label for=\"nombre\">Nombre</label>\n                    <input type=\"text\" name=\"nombre\" formControlName=\"nombre\" class=\"form-control\" \n                   [ngClass]=\"{'is-invalid': control.nombre.errors && formGroup.get('nombre').touched}\" />\n                    <div *ngIf=\"control.nombre.errors && formGroup.get('nombre').touched\" class=\"invalid-feedback\">\n                    <div *ngIf=\"control.nombre.errors.required\">Se requiere el nombre</div>\n                    </div> \n                </div>\n\n                <div class=\"form-group\">\n                    <label for=\"sexo\">Sexo</label>\n                    <input type=\"text\" name=\"sexo\" formControlName=\"sexo\" class=\"form-control\"\n                    [ngClass]=\"{'is-invalid': control.sexo.errors && formGroup.get('sexo').touched}\" />\n                    <div *ngIf=\"control.sexo.errors && formGroup.get('sexo').touched\" class=\"invalid-feedback\">\n                    <div *ngIf=\"control.sexo.errors.required\">El sexo es requerido</div>\n                    <div *ngIf=\"control.sexo.errors.validSexo\">{{control.sexo.errors.messageSexo}}</div>\n                    </div>\n                </div>\n\n                <div class=\"form-group\">\n                    <label for=\"edad\">Edad</label>\n                    <input type=\"number\" name=\"edad\" formControlName=\"edad\" class=\"form-control\"\n                    [ngClass]=\"{'is-invalid': control.edad.errors && formGroup.get('edad').touched}\" />\n                    <div *ngIf=\"control.nombre.errors && formGroup.get('edad').touched\" class=\"invalid-feedback\">\n                    <div *ngIf=\"control.edad.errors.required\">Se requiere la edad</div>\n                    </div> \n                </div>\n\n                <div class=\"form-group\">\n                    <label>Pulsacion</label>\n                    <input type=\"number\" name=\"pulsacion\" formControlName=\"pulsacion\" class=\"form-control\" />\n                </div>\n\n                <div class=\"text-center\">\n                    <button class=\"btn btn-primary mr-1\" (click)=\"onSubmit()\"[disabled]=\"formGroup.invalid\">Registrar</button>\n                    <button class=\"btn btn-secondary\" type=\"reset\">Cancelar</button>\n                </div>\n\n            </form>\n        </div>\n    </div>\n</div>\n","import { Persona } from './../pulsacion/models/persona';\nimport { Injectable, Inject } from '@angular/core';\nimport { HttpHeaders, HttpClient } from '@angular/common/http';\nimport { Observable, of } from 'rxjs';\nimport { catchError, map, tap } from 'rxjs/operators';\nimport { HandleHttpErrorService } from '../@base/handle-http-error.service';\n@Injectable({\n  providedIn: 'root'\n})\nexport class PersonaService {\n\n  baseUrl: string;\n  constructor(\n    private http: HttpClient,\n    @Inject('BASE_URL') baseUrl: string,\n    private handleErrorService: HandleHttpErrorService) {\n    this.baseUrl = baseUrl;\n  }\n\n  get(): Observable<Persona[]> {\n    return this.http.get<Persona[]>(this.baseUrl + 'api/Persona')\n      .pipe(\n        tap(_ => this.handleErrorService.log('datos enviados')),\n        catchError(this.handleErrorService.handleError<Persona[]>('Consulta Persona', null))\n      );\n  }\n\n  post(persona: Persona): Observable<Persona> {\n    return this.http.post<Persona>(this.baseUrl + 'api/Persona', persona)\n      .pipe(\n        tap(_ => this.handleErrorService.log('datos enviados')),\n        catchError(this.handleErrorService.handleError<Persona>('Registrar Persona', null))\n      );\n  }\n\n}\n","// This file can be replaced during build by using the `fileReplacements` array.\r\n// `ng build ---prod` replaces `environment.ts` with `environment.prod.ts`.\r\n// The list of file replacements can be found in `angular.json`.\r\n\r\nexport const environment = {\r\n  production: false\r\n};\r\n\r\n/*\r\n * In development mode, to ignore zone related error stack frames such as\r\n * `zone.run`, `zoneDelegate.invokeTask` for easier debugging, you can\r\n * import the following file, but please comment it out in production mode\r\n * because it will have performance impact when throw error\r\n */\r\n// import 'zone.js/dist/zone-error';  // Included with Angular CLI.\r\n","/***************************************************************************************************\n * Load `$localize` onto the global scope - used if i18n tags appear in Angular templates.\n */\nimport '@angular/localize/init';\nimport { enableProdMode } from '@angular/core';\r\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\r\n\r\nimport { AppModule } from './app/app.module';\r\nimport { environment } from './environments/environment';\r\n\r\nexport function getBaseUrl() {\r\n  return document.getElementsByTagName('base')[0].href;\r\n}\r\n\r\nconst providers = [\r\n  { provide: 'BASE_URL', useFactory: getBaseUrl, deps: [] }\r\n];\r\n\r\nif (environment.production) {\r\n  enableProdMode();\r\n}\r\n\r\nplatformBrowserDynamic(providers).bootstrapModule(AppModule)\r\n  .catch(err => console.log(err));\r\n"]}